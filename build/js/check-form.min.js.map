{"version":3,"sources":["check-form.js"],"names":["submitButton","document","querySelector","CHECKBOX","ZERO_LEVEL_ID","ALL_ID","initFormSubmitButton","addEventListener","submitButtonClickHandler","evt","preventDefault","checkedInputArray","getCheckedInputArray","console","log","parentArray","findParentElement","sendToServer","getJoinedIdArray","checkBoxClass","checkedInputs","querySelectorAll","Array","from","elementArray","forEach","element","push","closest","childrenArray","joinedArray","getIdArray","getFilteredArray","Set","outIdArray","id","inputSet","delete","value","startsWith","clearForm","inputArray","setTimeout","checked","data"],"mappings":"AACA,aAEA,IAAIA,aAAeC,SAASC,cAAc,iBAE1C,MAAMC,SAAW,wBACXC,cAAgB,IAChBC,OAAS,OAEf,SAASC,uBACHN,cACFA,aAAaO,iBAAiB,QAASC,0BAI3C,SAASA,yBAAyBC,GAChCA,EAAIC,iBAEJ,IAAIC,EAAoBC,uBAExBC,QAAQC,IAAIH,GACZ,IAAII,EAAcC,kBAAkBL,GAEpCE,QAAQC,IAAIC,GAUZE,aAPcC,iBAAiBP,EAAmBI,IAUpD,SAASH,uBACP,IAAIO,EAAgB,IAAIhB,WACpBiB,EAAgBnB,SAASoB,iBAAiB,GAAGF,aACjD,OAAOG,MAAMC,KAAKH,GAGpB,SAASJ,kBAAkBQ,GACzB,IAAIT,EAAc,GAIlB,OAHAS,EAAaC,SAASC,IACpBX,EAAYY,KAAKD,EAAQE,QAAQ,UAE5Bb,EAGT,SAASG,iBAAiBW,EAAed,GACvC,IAEIe,EAAc,IAFIC,WAAWF,MACbE,WAAWhB,IAQ/B,OAJoBiB,iBAFE,IAAIC,IAAIH,IAShC,SAASC,WAAWP,GAClB,IAAIU,EAAa,GAIjB,OAHAV,EAAaC,SAASC,IACpBQ,EAAWP,KAAKD,EAAQS,OAEnBD,EAGT,SAASF,iBAAiBI,GAOxB,OANAA,EAASC,OAlEW,KAmEpBD,EAASX,SAASa,IAChBzB,QAAQC,IAAIwB,GACRA,EAAMC,WApEC,SAoEmBH,EAASC,OAAOC,MAGzChB,MAAMC,KAAKa,GAGpB,SAASI,UAAUC,GACjBC,YAAW,KACTD,EAAWhB,SAASC,IAClBA,EAAQiB,SAAU,OAEnB,KAGL,SAAS1B,aAAa2B,GACpB/B,QAAQC,IAAI8B,GAGdtC","file":"check-form.min.js","sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\nlet submitButton = document.querySelector('.form__button');\n\nconst CHECKBOX = 'checkbox-block__input';\nconst ZERO_LEVEL_ID = '0';\nconst ALL_ID = 'all-';\n\nfunction initFormSubmitButton() {\n  if (submitButton) {\n    submitButton.addEventListener('click', submitButtonClickHandler);\n  }\n}\n\nfunction submitButtonClickHandler(evt) {\n  evt.preventDefault();\n  // находим все checked input\n  let checkedInputArray = getCheckedInputArray();\n  // FIXME убрать console.log\n  console.log(checkedInputArray);\n  let parentArray = findParentElement(checkedInputArray);\n  // FIXME убрать console.log\n  console.log(parentArray);\n\n  // получаем массив id родителей (списки) и детей (input)\n  let idArray = getJoinedIdArray(checkedInputArray, parentArray);\n\n  // FIXME восстановить сброс формы\n  // делаем сброс отмеченных input\n  // clearForm(checkedInputArray);\n\n  // отправляем данные на сервер\n  sendToServer(idArray);\n}\n\nfunction getCheckedInputArray() {\n  let checkBoxClass = `.${CHECKBOX}`;\n  let checkedInputs = document.querySelectorAll(`${checkBoxClass}:checked`);\n  return Array.from(checkedInputs);\n}\n\nfunction findParentElement(elementArray) {\n  let parentArray = [];\n  elementArray.forEach((element) => {\n    parentArray.push(element.closest('ul'));\n  });\n  return parentArray;\n}\n\nfunction getJoinedIdArray(childrenArray, parentArray) {\n  let childrenIdArray = getIdArray(childrenArray);\n  let parentIdArray = getIdArray(parentArray);\n  let joinedArray = [...childrenIdArray, ...parentIdArray];\n  let uniqueJoinedSet = new Set(joinedArray);\n  // убираем лишние id\n  let filteredArray = getFilteredArray(uniqueJoinedSet);\n\n  // let joinedArray = parentIdArray.concat(childrenIdArray);\n\n  return filteredArray;\n}\n\nfunction getIdArray(elementArray) {\n  let outIdArray = [];\n  elementArray.forEach((element) => {\n    outIdArray.push(element.id);\n  });\n  return outIdArray;\n}\n\nfunction getFilteredArray(inputSet) {\n  inputSet.delete(ZERO_LEVEL_ID);\n  inputSet.forEach((value) => {\n    console.log(value);\n    if (value.startsWith(ALL_ID)) inputSet.delete(value);\n  });\n\n  return Array.from(inputSet);\n}\n\nfunction clearForm(inputArray) {\n  setTimeout(() => {\n    inputArray.forEach((element) => {\n      element.checked = false;\n    });\n  }, 1000);\n}\n\nfunction sendToServer(data) {\n  console.log(data);\n}\n\ninitFormSubmitButton();\n// export {};\n\n// глубокое клонирование\n// const cloned = ele.cloneNode(true);\n"]}