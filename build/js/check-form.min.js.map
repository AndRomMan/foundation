{"version":3,"sources":["check-form.js"],"names":["submitButton","document","querySelector","CHECKBOX","ZERO_LEVEL_ID","ALL_ID","initFormSubmitButton","addEventListener","submitButtonClickHandler","evt","preventDefault","checkedInputArray","getCheckedInputArray","console","log","parentArray","findParentElement","idArray","getJoinedIdArray","clearForm","sendToServer","checkBoxClass","checkedInputs","querySelectorAll","Array","from","elementArray","forEach","element","push","closest","getIdArray","outIdArray","id","childrenArray","joinedArray","getFilteredArray","Set","inputSet","delete","value","startsWith","inputArray","setTimeout","checked","data"],"mappings":"AACA,aAEA,IAAIA,aAAeC,SAASC,cAAc,iBAE1C,MAAMC,SAAW,wBACXC,cAAgB,IAChBC,OAAS,OAIf,SAASC,uBACHN,cACFA,aAAaO,iBAAiB,QAASC,0BAI3C,SAASA,yBAAyBC,GAChCA,EAAIC,iBAEJ,IAAIC,EAAoBC,uBACxBC,QAAQC,IAAIH,GACZ,IAAII,EAAcC,kBAAkBL,GACpCE,QAAQC,IAAIC,GAGZ,IAAIE,EAAUC,iBAAiBP,EAAmBI,GAGlDI,UAAUR,GAGVS,aAAaH,GAGf,SAASL,uBACP,IAAIS,EAAgB,IAAIlB,WACpBmB,EAAgBrB,SAASsB,iBAAiB,GAAGF,aACjD,OAAOG,MAAMC,KAAKH,GAGpB,SAASN,kBAAkBU,GACzB,IAAIX,EAAc,GAIlB,OAHAW,EAAaC,SAASC,IACpBb,EAAYc,KAAKD,EAAQE,QAAQ,UAE5Bf,EAGT,SAASgB,WAAWL,GAClB,IAAIM,EAAa,GAIjB,OAHAN,EAAaC,SAASC,IACpBI,EAAWH,KAAKD,EAAQK,OAEnBD,EAGT,SAASd,iBAAiBgB,EAAenB,GACvC,IAEIoB,EAAc,IAFIJ,WAAWG,MACbH,WAAWhB,IAK/B,OADoBqB,iBAFE,IAAIC,IAAIF,IAMhC,SAASC,iBAAiBE,GAOxB,OANAA,EAASC,OA9DW,KA+DpBD,EAASX,SAASa,IAChB3B,QAAQC,IAAI0B,GACRA,EAAMC,WAhEC,SAgEmBH,EAASC,OAAOC,MAGzChB,MAAMC,KAAKa,GAGpB,SAASnB,UAAUuB,GACjBC,YAAW,KACTD,EAAWf,SAASC,IAClBA,EAAQgB,SAAU,OAEnB,KAGL,SAASxB,aAAayB,GACpBhC,QAAQC,IAAI+B,GA7EdvC","file":"check-form.min.js","sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\nlet submitButton = document.querySelector('.form__button');\n\nconst CHECKBOX = 'checkbox-block__input';\nconst ZERO_LEVEL_ID = '0';\nconst ALL_ID = 'all-';\n\ninitFormSubmitButton();\n\nfunction initFormSubmitButton() {\n  if (submitButton) {\n    submitButton.addEventListener('click', submitButtonClickHandler);\n  }\n}\n\nfunction submitButtonClickHandler(evt) {\n  evt.preventDefault();\n  // находим все checked input\n  let checkedInputArray = getCheckedInputArray();\n  console.log(checkedInputArray);\n  let parentArray = findParentElement(checkedInputArray);\n  console.log(parentArray);\n\n  // получаем массив id родителей (списки) и детей (input)\n  let idArray = getJoinedIdArray(checkedInputArray, parentArray);\n\n  // делаем сброс отмеченных input\n  clearForm(checkedInputArray);\n\n  // отправляем данные на сервер\n  sendToServer(idArray);\n}\n\nfunction getCheckedInputArray() {\n  let checkBoxClass = `.${CHECKBOX}`;\n  let checkedInputs = document.querySelectorAll(`${checkBoxClass}:checked`);\n  return Array.from(checkedInputs);\n}\n\nfunction findParentElement(elementArray) {\n  let parentArray = [];\n  elementArray.forEach((element) => {\n    parentArray.push(element.closest('ul'));\n  });\n  return parentArray;\n}\n\nfunction getIdArray(elementArray) {\n  let outIdArray = [];\n  elementArray.forEach((element) => {\n    outIdArray.push(element.id);\n  });\n  return outIdArray;\n}\n\nfunction getJoinedIdArray(childrenArray, parentArray) {\n  let childrenIdArray = getIdArray(childrenArray);\n  let parentIdArray = getIdArray(parentArray);\n  let joinedArray = [...childrenIdArray, ...parentIdArray];\n  let uniqueJoinedSet = new Set(joinedArray);\n  // убираем лишние id: '0' и начинающиеся с 'all-'\n  let filteredArray = getFilteredArray(uniqueJoinedSet);\n  return filteredArray;\n}\n\nfunction getFilteredArray(inputSet) {\n  inputSet.delete(ZERO_LEVEL_ID);\n  inputSet.forEach((value) => {\n    console.log(value);\n    if (value.startsWith(ALL_ID)) inputSet.delete(value);\n  });\n\n  return Array.from(inputSet);\n}\n\nfunction clearForm(inputArray) {\n  setTimeout(() => {\n    inputArray.forEach((element) => {\n      element.checked = false;\n    });\n  }, 1000);\n}\n\nfunction sendToServer(data) {\n  console.log(data);\n}\n"]}