{"version":3,"sources":["rendering.js"],"names":["componentFlatArray","ALL_ID","LIST_NOT_FOUND","OUTER_TYPE","INNER_TYPE","MAIN_ROOT_LIST","INNER_BOX_FIELD_TEMPLATE","INNER_BOX_ITEM_TEMPLATE","OUTER_BOX_FIELD_TEMPLATE","OUTER_BOX_ITEM_TEMPLATE","SINGLE_FIELD_TEMPLATE","mainRootList","document","querySelector","innerBoxFieldTemplate","innerBoxItemTemplate","outerBoxFieldTemplate","outerBoxItemTemplate","singleFieldTemplate","components","createHtmlStructure","componentArray","fragment","createDocumentFragment","forEach","obj","parentId","id","name","children","setFormField","createSingleField","createOuterBoxField","getTypeOfParentBox","setComponent","createInnerBoxField","typeOfParentBox","createOuterBoxItem","createInnerBoxItem","append","length","element","setIdAndLabel","cloneNode","content","setIdLabelAndSummary","typeOfList","parentList","String","dataset","list","console","log","label","setAttribute","textContent","input","inputId","toLowerCase"],"mappings":"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","file":"rendering.min.js","sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\nimport {componentFlatArray} from './get-flat-array.min.js';\n\nimport {ALL_ID} from './main.min.js';\nimport {LIST_NOT_FOUND, OUTER_TYPE, INNER_TYPE} from './main.min.js';\nimport {\n  MAIN_ROOT_LIST,\n  INNER_BOX_FIELD_TEMPLATE,\n  INNER_BOX_ITEM_TEMPLATE,\n  OUTER_BOX_FIELD_TEMPLATE,\n  OUTER_BOX_ITEM_TEMPLATE,\n  SINGLE_FIELD_TEMPLATE,\n} from './main.min.js';\n\nconst mainRootList = document.querySelector(MAIN_ROOT_LIST);\nconst innerBoxFieldTemplate = document.querySelector(INNER_BOX_FIELD_TEMPLATE);\nconst innerBoxItemTemplate = document.querySelector(INNER_BOX_ITEM_TEMPLATE);\nconst outerBoxFieldTemplate = document.querySelector(OUTER_BOX_FIELD_TEMPLATE);\nconst outerBoxItemTemplate = document.querySelector(OUTER_BOX_ITEM_TEMPLATE);\nconst singleFieldTemplate = document.querySelector(SINGLE_FIELD_TEMPLATE);\n\nlet components = [];\n\nif (componentFlatArray) {\n  components = componentFlatArray;\n}\n\ncreateHtmlStructure(components);\n\nfunction createHtmlStructure(componentArray) {\n  // создаем фрагмент HTML структуры,\n  // которую будем добавлять в корневой список\n  let fragment = document.createDocumentFragment();\n\n  componentArray.forEach((obj) => {\n    let {parentId, id, name, children} = obj;\n\n    if (parentId === 0 && children === false) {\n      let elementSingleField = createSingleField(id, name);\n      setFormField(elementSingleField, fragment);\n    }\n\n    if (parentId === 0 && children === true) {\n      let elementOuterBoxField = createOuterBoxField(id, name);\n      setFormField(elementOuterBoxField, fragment);\n    }\n\n    if (parentId !== 0 && children === true) {\n      // определим существует ли родительский список\n      let typeOfParentBox = getTypeOfParentBox(parentId, fragment);\n\n      if (typeOfParentBox !== LIST_NOT_FOUND) {\n        let innerBoxField = createInnerBoxField(id, name);\n        setComponent(innerBoxField, fragment, parentId);\n      }\n    }\n\n    if (parentId !== 0 && children === false) {\n      // определим в какой список: внешний (outer) или вложенный (inner)\n      // пойдет элемент и существует ли родительский список\n      let typeOfParentBox = getTypeOfParentBox(parentId, fragment);\n\n      if (typeOfParentBox === OUTER_TYPE) {\n        let outerBoxItem = createOuterBoxItem(id, name);\n        setComponent(outerBoxItem, fragment, parentId);\n      }\n\n      if (typeOfParentBox === INNER_TYPE) {\n        let innerBoxItem = createInnerBoxItem(id, name);\n        setComponent(innerBoxItem, fragment, parentId);\n      }\n    }\n  });\n\n  // вставка собранного фрагмента в корневой список\n  mainRootList.append(fragment);\n\n  // очищаем массив компонентов\n  components.length = 0;\n}\n\n// поле формы вставляем в корневой лист (id=\"0\")\nfunction setFormField(element, fragment) {\n  fragment.append(element);\n}\n\n// создаем поле формы в корневом листе (id=\"0\")\nfunction createSingleField(id, name) {\n  let element = singleFieldTemplate.cloneNode(true).content;\n  return setIdAndLabel(element, id, name);\n}\n\nfunction createOuterBoxField(id, name) {\n  let element = outerBoxFieldTemplate.cloneNode(true).content;\n  return setIdLabelAndSummary(element, id, name);\n}\n\n// определяем тип родительского списка и проверяем на его наличие\nfunction getTypeOfParentBox(parentId, fragment) {\n  let typeOfList = LIST_NOT_FOUND;\n  let parentList = fragment.querySelector(`ul[id=\"${String(parentId)}\"]`);\n  if (parentList) {\n    typeOfList = parentList.dataset.list;\n  }\n\n  if (typeOfList === LIST_NOT_FOUND) {\n    console.log(`не найден родительский список id=${parentId}`);\n  }\n\n  return typeOfList;\n}\n\n// создаем элемент внешний (inner) списка\nfunction createOuterBoxItem(id, name) {\n  let element = outerBoxItemTemplate.cloneNode(true).content;\n  return setIdAndLabel(element, id, name);\n}\n\n// создаем элемент внешнего(outer) списка\nfunction createInnerBoxItem(id, name) {\n  let element = innerBoxItemTemplate.cloneNode(true).content;\n  return setIdAndLabel(element, id, name);\n}\n\n// создаем элемент корневого (id=\"0\") списка\nfunction createInnerBoxField(id, name) {\n  let element = innerBoxFieldTemplate.cloneNode(true).content;\n  return setIdLabelAndSummary(element, id, name);\n}\n\n// установка необходимых атрибутов\nfunction setIdAndLabel(element, id, name) {\n  let input = element.querySelector('input');\n  input.id = String(id);\n\n  let label = element.querySelector('label');\n  label.setAttribute('for', id);\n  label.textContent = name;\n\n  return element;\n}\n\n// установка необходимых атрибутов\nfunction setIdLabelAndSummary(element, id, name) {\n  let summary = element.querySelector('summary');\n  summary.textContent = name;\n\n  let ul = element.querySelector('ul');\n  ul.id = id;\n\n  let input = element.querySelector('input');\n  let inputId = ALL_ID + String(id);\n  input.id = inputId;\n\n  let label = element.querySelector('label');\n  label.setAttribute('for', inputId);\n  label.textContent = `Все ${name.toLowerCase()}`;\n\n  return element;\n}\n\n// установить элемент в нужную позицию относительно его родителя (parentId)\n// во фрагменте\nfunction setComponent(element, fragment, parentId) {\n  let parentList = fragment.querySelector(`ul[id=\"${String(parentId)}\"]`);\n  parentList.append(element);\n}\n"]}