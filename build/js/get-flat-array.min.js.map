{"version":3,"sources":["get-flat-array.js"],"names":["groupsFromBackend","getComponentFlatArray","incomingArray","componentFlatArray","getFlatArray","sortedByParentIdArray","innerArray","parentId","targetArray","forEach","treeElement","flatArrayElement","Node","push","newParentId","length","currentObject","id","name","groups","this","children","inputArray","sort","a","b"],"mappings":"AACA,8BAEkBA,sBAAwB,kBAE1C,SAASC,sBAAsBC,GAC7B,IAAIC,EAAqB,GAOzB,OAHAC,aAAaF,EAFE,EAEuBC,GAEtCE,sBAAsBF,GACfA,EAGT,SAASC,aAAaE,EAAYC,EAAUC,GAC1CF,EAAWG,SAASC,IAClB,IAAIC,EAAmB,IAAIC,KAAKF,EAAaH,GAC7CC,EAAYK,KAAKF,GACjB,IAAIG,EAAcJ,EAAgB,GAEG,IAAjCA,EAAoB,OAAEK,QACxBX,aAAaM,EAAoB,OAAGI,EAAaN,MAMvD,SAASI,KAAKI,EAAeT,GAC3B,IAAIU,GAACA,EAAEC,KAAEA,EAAIC,OAAEA,GAAUH,EACzBI,KAAKb,SAAWA,EAChBa,KAAKH,GAAKA,EACVG,KAAKF,KAAOA,EACU,IAAlBC,EAAOJ,OACTK,KAAKC,UAAW,EAEhBD,KAAKC,UAAW,EAIpB,SAAShB,sBAAsBiB,GAI7B,OAHAA,EAAWC,MAAK,SAAUC,EAAGC,GAC3B,OAAOD,EAAEjB,SAAWkB,EAAElB,YAEjBe,EAGT,IAAInB,mBAAqBF,sBAAsBD,0BAEvCG","file":"get-flat-array.min.js","sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\nimport {groups as groupsFromBackend} from './groups.min.js';\n\nfunction getComponentFlatArray(incomingArray) {\n  let componentFlatArray = [];\n  // id коневого списка компонентов\n  let parentId = 0;\n\n  getFlatArray(incomingArray, parentId, componentFlatArray);\n  // сортируем выходной массив по parentId\n  sortedByParentIdArray(componentFlatArray);\n  return componentFlatArray;\n}\n\nfunction getFlatArray(innerArray, parentId, targetArray) {\n  innerArray.forEach((treeElement) => {\n    let flatArrayElement = new Node(treeElement, parentId);\n    targetArray.push(flatArrayElement);\n    let newParentId = treeElement['id'];\n\n    if (treeElement['groups'].length !== 0) {\n      getFlatArray(treeElement['groups'], newParentId, targetArray);\n    }\n  });\n}\n\n// конструктор нового элемента для плоского массива\nfunction Node(currentObject, parentId) {\n  let {id, name, groups} = currentObject;\n  this.parentId = parentId;\n  this.id = id;\n  this.name = name;\n  if (groups.length === 0) {\n    this.children = false;\n  } else {\n    this.children = true;\n  }\n}\n\nfunction sortedByParentIdArray(inputArray) {\n  inputArray.sort(function (a, b) {\n    return a.parentId - b.parentId;\n  });\n  return inputArray;\n}\n\nlet componentFlatArray = getComponentFlatArray(groupsFromBackend);\n\nexport {componentFlatArray};\n"]}