{"version":3,"sources":["form-validating.js"],"names":["FORM_BUTTON","ALL_ID","CHECKBOX","ROOT_LIST","ZERO_LEVEL_ID","submitButton","document","querySelector","initFormSubmitButton","addEventListener","submitButtonClickHandler","evt","preventDefault","checkedInputArray","getCheckedInputArray","idArray","getJoinedIdArray","getParentArray","clearForm","sendToServer","checkBoxClass","checkedInputs","querySelectorAll","Array","from","elementArray","parentArray","forEach","element","getClosestParents","closestParent","closest","push","id","parentElement","getIdArray","childrenArray","joinedArray","getFilteredNumberArray","Set","inputSet","delete","value","startsWith","map","elem","Number","inputArray","setTimeout","checked","data","length","console","log"],"mappings":"AACA,oBAEQA,YAAaC,OAAQC,SAAUC,UAAWC,kBAAoB,gBAEtE,IAAIC,aAAeC,SAASC,cAAc,IAAIP,eAI9C,SAASQ,uBACHH,cACFA,aAAaI,iBAAiB,QAASC,0BAI3C,SAASA,yBAAyBC,GAChCA,EAAIC,iBAEJ,IAAIC,EAAoBC,uBAIpBC,EAAUC,iBAAiBH,EAHbI,eAAeJ,IAMjCK,UAAUL,GAGVM,aAAaJ,GAGf,SAASD,uBACP,IAAIM,EAAgB,IAAIlB,WACpBmB,EAAgBf,SAASgB,iBAAiB,GAAGF,aACjD,OAAOG,MAAMC,KAAKH,GAGpB,SAASJ,eAAeQ,GACtB,IAAIC,EAAc,GAMlB,OAJAD,EAAaE,SAASC,IACpBC,kBAAkBD,EAASF,MAGtBA,EAGT,SAASG,kBAAkBD,EAASF,GAClC,IAAII,EAAgBF,EAAQG,QAAQ5B,WAGpC,GAFAuB,EAAYM,KAAKF,GAEQ,MAArBA,EAAcG,GAAY,CAE5BJ,kBADyBC,EAAcI,cACDR,IAI1C,SAASS,WAAWV,GAClB,IAAIV,EAAU,GAId,OAHAU,EAAaE,SAASC,IACpBb,EAAQiB,KAAKJ,EAAQK,OAEhBlB,EAGT,SAASC,iBAAiBoB,EAAeV,GACvC,IAEIW,EAAc,IAFIF,WAAWC,MACbD,WAAWT,IAK/B,OADoBY,uBAFE,IAAIC,IAAIF,IAMhC,SAASC,uBAAuBE,GAS9B,OARAA,EAASC,OAAOrC,eAEhBoC,EAASb,SAASe,IACZA,EAAMC,WAAW1C,SACnBuC,EAASC,OAAOC,MAIbnB,MAAMC,KAAKgB,GAAUI,KAAKC,GAASC,OAAOD,KAGnD,SAAS3B,UAAU6B,GACjBC,YAAW,KACTD,EAAWpB,SAASC,IAClBA,EAAQqB,SAAU,OAEnB,KAGL,SAAS9B,aAAa+B,GACA,IAAhBA,EAAKC,OACPC,QAAQC,IAAI,qCAEZD,QAAQC,IAAIH,GA5FhB1C","file":"form-validating.min.js","sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\nimport {FORM_BUTTON, ALL_ID, CHECKBOX, ROOT_LIST, ZERO_LEVEL_ID} from './main.min.js';\n\nlet submitButton = document.querySelector(`.${FORM_BUTTON}`);\n\ninitFormSubmitButton();\n\nfunction initFormSubmitButton() {\n  if (submitButton) {\n    submitButton.addEventListener('click', submitButtonClickHandler);\n  }\n}\n\nfunction submitButtonClickHandler(evt) {\n  evt.preventDefault();\n  // находим все checked input\n  let checkedInputArray = getCheckedInputArray();\n  let parentArray = getParentArray(checkedInputArray);\n\n  // получаем массив id родителей (списки) и детей (input)\n  let idArray = getJoinedIdArray(checkedInputArray, parentArray);\n\n  // делаем сброс отмеченных input\n  clearForm(checkedInputArray);\n\n  // отправляем данные на сервер\n  sendToServer(idArray);\n}\n\nfunction getCheckedInputArray() {\n  let checkBoxClass = `.${CHECKBOX}`;\n  let checkedInputs = document.querySelectorAll(`${checkBoxClass}:checked`);\n  return Array.from(checkedInputs);\n}\n\nfunction getParentArray(elementArray) {\n  let parentArray = [];\n\n  elementArray.forEach((element) => {\n    getClosestParents(element, parentArray);\n  });\n\n  return parentArray;\n}\n\nfunction getClosestParents(element, parentArray) {\n  let closestParent = element.closest(ROOT_LIST);\n  parentArray.push(closestParent);\n\n  if (closestParent.id !== '0') {\n    let upToParentOfParent = closestParent.parentElement;\n    getClosestParents(upToParentOfParent, parentArray);\n  }\n}\n\nfunction getIdArray(elementArray) {\n  let idArray = [];\n  elementArray.forEach((element) => {\n    idArray.push(element.id);\n  });\n  return idArray;\n}\n\nfunction getJoinedIdArray(childrenArray, parentArray) {\n  let childrenIdArray = getIdArray(childrenArray);\n  let parentIdArray = getIdArray(parentArray);\n  let joinedArray = [...childrenIdArray, ...parentIdArray];\n  let uniqueJoinedSet = new Set(joinedArray);\n  // убираем лишние id: '0' и начинающиеся с 'all-'\n  let filteredArray = getFilteredNumberArray(uniqueJoinedSet);\n  return filteredArray;\n}\n\nfunction getFilteredNumberArray(inputSet) {\n  inputSet.delete(ZERO_LEVEL_ID);\n\n  inputSet.forEach((value) => {\n    if (value.startsWith(ALL_ID)) {\n      inputSet.delete(value);\n    }\n  });\n\n  return Array.from(inputSet).map((elem) => Number(elem));\n}\n\nfunction clearForm(inputArray) {\n  setTimeout(() => {\n    inputArray.forEach((element) => {\n      element.checked = false;\n    });\n  }, 1000);\n}\n\nfunction sendToServer(data) {\n  if (data.length === 0) {\n    console.log('Нет данных для отправки на сервер');\n  } else {\n    console.log(data);\n  }\n}\n"]}