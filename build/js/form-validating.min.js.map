{"version":3,"sources":["form-validating.js"],"names":["CHECKBOX","ZERO_LEVEL_ID","ALL_ID","ROOT_LIST","submitButton","document","querySelector","initFormSubmitButton","addEventListener","submitButtonClickHandler","evt","preventDefault","checkedInputArray","getCheckedInputArray","idArray","getJoinedIdArray","getParentElement","clearForm","sendToServer","checkBoxClass","checkedInputs","querySelectorAll","Array","from","elementArray","parentArray","forEach","element","push","closest","getIdArray","outIdArray","id","childrenArray","joinedArray","getFilteredArray","Set","inputSet","delete","value","startsWith","inputArray","setTimeout","checked","data","console","log"],"mappings":"AACA,aAEA,MAAMA,SAAW,wBACXC,cAAgB,IAChBC,OAAS,OACTC,UAAY,KAElB,IAAIC,aAAeC,SAASC,cAAc,iBAI1C,SAASC,uBACHH,cACFA,aAAaI,iBAAiB,QAASC,0BAI3C,SAASA,yBAAyBC,GAChCA,EAAIC,iBAEJ,IAAIC,EAAoBC,uBAIpBC,EAAUC,iBAAiBH,EAHbI,iBAAiBJ,IAMnCK,UAAUL,GAGVM,aAAaJ,GAGf,SAASD,uBACP,IAAIM,EAAgB,IAAInB,WACpBoB,EAAgBf,SAASgB,iBAAiB,GAAGF,aACjD,OAAOG,MAAMC,KAAKH,GAGpB,SAASJ,iBAAiBQ,GACxB,IAAIC,EAAc,GAIlB,OAHAD,EAAaE,SAASC,IACpBF,EAAYG,KAAKD,EAAQE,QArCX,UAuCTJ,EAGT,SAASK,WAAWN,GAClB,IAAIO,EAAa,GAIjB,OAHAP,EAAaE,SAASC,IACpBI,EAAWH,KAAKD,EAAQK,OAEnBD,EAGT,SAAShB,iBAAiBkB,EAAeR,GACvC,IAEIS,EAAc,IAFIJ,WAAWG,MACbH,WAAWL,IAK/B,OADoBU,iBAFE,IAAIC,IAAIF,IAMhC,SAASC,iBAAiBE,GAMxB,OALAA,EAASC,OA/DW,KAgEpBD,EAASX,SAASa,IACZA,EAAMC,WAhEC,SAgEmBH,EAASC,OAAOC,MAGzCjB,MAAMC,KAAKc,GAGpB,SAASpB,UAAUwB,GACjBC,YAAW,KACTD,EAAWf,SAASC,IAClBA,EAAQgB,SAAU,OAEnB,KAGL,SAASzB,aAAa0B,GACpBC,QAAQC,IAAI,6BACZD,QAAQC,IAAIF,GA3EdrC","file":"form-validating.min.js","sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\nconst CHECKBOX = 'checkbox-block__input';\nconst ZERO_LEVEL_ID = '0';\nconst ALL_ID = 'all-';\nconst ROOT_LIST = 'ul';\n\nlet submitButton = document.querySelector('.form__button');\n\ninitFormSubmitButton();\n\nfunction initFormSubmitButton() {\n  if (submitButton) {\n    submitButton.addEventListener('click', submitButtonClickHandler);\n  }\n}\n\nfunction submitButtonClickHandler(evt) {\n  evt.preventDefault();\n  // находим все checked input\n  let checkedInputArray = getCheckedInputArray();\n  let parentArray = getParentElement(checkedInputArray);\n\n  // получаем массив id родителей (списки) и детей (input)\n  let idArray = getJoinedIdArray(checkedInputArray, parentArray);\n\n  // делаем сброс отмеченных input\n  clearForm(checkedInputArray);\n\n  // отправляем данные на сервер\n  sendToServer(idArray);\n}\n\nfunction getCheckedInputArray() {\n  let checkBoxClass = `.${CHECKBOX}`;\n  let checkedInputs = document.querySelectorAll(`${checkBoxClass}:checked`);\n  return Array.from(checkedInputs);\n}\n\nfunction getParentElement(elementArray) {\n  let parentArray = [];\n  elementArray.forEach((element) => {\n    parentArray.push(element.closest(ROOT_LIST));\n  });\n  return parentArray;\n}\n\nfunction getIdArray(elementArray) {\n  let outIdArray = [];\n  elementArray.forEach((element) => {\n    outIdArray.push(element.id);\n  });\n  return outIdArray;\n}\n\nfunction getJoinedIdArray(childrenArray, parentArray) {\n  let childrenIdArray = getIdArray(childrenArray);\n  let parentIdArray = getIdArray(parentArray);\n  let joinedArray = [...childrenIdArray, ...parentIdArray];\n  let uniqueJoinedSet = new Set(joinedArray);\n  // убираем лишние id: '0' и начинающиеся с 'all-'\n  let filteredArray = getFilteredArray(uniqueJoinedSet);\n  return filteredArray;\n}\n\nfunction getFilteredArray(inputSet) {\n  inputSet.delete(ZERO_LEVEL_ID);\n  inputSet.forEach((value) => {\n    if (value.startsWith(ALL_ID)) inputSet.delete(value);\n  });\n\n  return Array.from(inputSet);\n}\n\nfunction clearForm(inputArray) {\n  setTimeout(() => {\n    inputArray.forEach((element) => {\n      element.checked = false;\n    });\n  }, 1000);\n}\n\nfunction sendToServer(data) {\n  console.log('Отправка данных на сервер');\n  console.log(data);\n}\n"]}